#####
# solving equation
solveRate<-function(pars,times=c(0,7,10,14,28,56,84,168)){
	derivs<-function(t,state,pars){ #returns rate of change
	with(as.list(c(state,pars)),{
		M=1/(g*exp(-(k*t))+1)
		return(list(M))
		})
	}
	state<-c(M=0)
	return(as.data.frame(ode(y=state,times=times,func=derivs,parms=pars)))
}

## 
# parameter list
pars<-list(g=99,k=0.01)
##############################################################

## model fitting
# fetch data
a<-list()
f=list.files('~/Desktop/immune/R/data/',full.names="TRUE")
for (j in 1:4) {
	a[[j]]<-readFile(f[j])
	par(mfrow=c(3,5))
	
	# Model fitting
	for (i in 2:(length(a[[j]]))){
	# variable declarations
	k2<-c();temp<-c();dayTemp<-c()
		for (k in 1:length(a[[j]][,i])){
			temp=a[[j]][,i]
			if(is.na(temp[k])){k2=c(k2,k)}
		}
		if(length(k2)!=0){
		# data complaince
		temp=temp[-k2]
		TT=a[[j]][,1][-k2]
		}
		
		# default data
		if(length(k2)==0){
			TT<-c(7,10,14,28,56,84,168) # time
			temp=a[[j]][,i+1]
		}

		# initial parameter guess
		kk=0.05	 # escape rate
		gg=5	 # initial population ratio
		params.init<-c(k=kk,g=gg)
		#print(length(TT))
		#print(length(temp))
		# plot data
		plot(TT,(temp/100),xlab="Days",ylab=paste(colnames(a[[j]][i]),"Escape Rates"),main=f[j])

		# analytical solution
		model<-function(params,times){
			with(as.list(params),return(1/((g*exp(-k*times))+1)))
		}
	
		# running model with initial params and plot the results
		lines(TT,model(params.init,TT),lwd=2,col="green")

		# fitting algorithm
		ModelCost<-function(P){
			out<-model(params=P,times=TT)
			print(P)
			print(out)
			return(temp-(out*100)) #residuals
		}

		Fita<-modFit(f=ModelCost,params.init,lower=c(0,0))
		times<-TT
		lines(times,model(Fita$par,times),lwd=2,col="Blue")
		#summary(Fita)
	}
	savePlot(paste("~/Desktop/",j,".png"))
}
#################################################################
